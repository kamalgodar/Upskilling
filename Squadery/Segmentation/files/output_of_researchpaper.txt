Deﬁnition: The goal of a Recommender System is to generate meaningful recommendations: to a collection of users for items or products that might interest them. Sugges-: tions for books on Amazon, or movies on Netﬂix, are real world examples of the: operation of industry-strength recommender systems. The design of such recom-: mendation engines depends on the domain and the particular characteristics of the: data available. For example, movie watchers on Netﬂix frequently provide rat-: ings on a scale of 1 (disliked) to 5 (liked). Such a data source records the quality: of interactions between users and items. Additionally, the system may have ac-: cess to user-speciﬁc and item-speciﬁc proﬁle attributes such as demographics and: product descriptions respectively. Recommender systems differ in the way they: analyze these data sources to develop notions of afﬁnity between users and items: which can be used to identify well-matched pairs. Collaborative Filtering sys-: tems analyze historical interactions alone, while Content-based Filtering systems: are based on proﬁle attributes; and Hybrid techniques attempt to combine both of: these designs. The architecture of recommender systems and their evaluation on: real-world problems is an active area of research.: 2

Motivation and Background: Obtaining recommendations from trusted sources is a critical component of the: natural process of human decision making. With burgeoning consumerism buoyed: by the emergence of the web, buyers are being presented with an increasing range: of choices while sellers are being faced with the challenge of personalizing their: 1: advertising efforts. In parallel, it has become common for enterprises to collect: large volumes of transactional data that allows for deeper analysis of how a cus-: tomer base interacts with the space of product offerings. Recommender Systems: have evolved to fulﬁll the natural dual need of buyers and sellers by automating: the generation of recommendations based on data analysis.: The term “collaborative ﬁltering” was introduced in the context of the ﬁrst: commercial recommender system, called Tapestry[9], which was designed to rec-: ommend documents drawn from newsgroups to a collection of users. The mo-: tivation was to leverage social collaboration in order to prevent users from get-: ting inundated by a large volume of streaming documents. Collaborative ﬁltering,: which analyzes usage data across users to ﬁnd well matched user-item pairs, has: since been juxtaposed against the older methodology of content ﬁltering which: had its original roots in information retrieval. In content ﬁltering, recommenda-: tions are not “collaborative” in the sense that suggestions made to a user do not: explicitly utilize information across the entire user-base. Some early successes of: collaborative ﬁltering on related domains included the GroupLens system [29].: As noted in [4], initial formulations for recommender systems were based on: straightforward correlation statistics and predictive modeling, not engaging the: wider range of practices in statistics and machine learning literature. The col-: laborative ﬁltering problem was mapped to classiﬁcation, which allowed dimen-: sionality reduction techniques to be brought into play to improve the quality of the: solutions. Concurrently, several efforts attempted to combine content-based meth-: ods with collaborative ﬁltering, and to incorporate additional domain knowledge: in the architecture of recommender systems.: Further research was spurred by the public availability of datasets on the web,: and the interest generated due to direct relevance to e-commerce. Netﬂix, an on-: line streaming video and DVD rental service, released a large-scale dataset con-: taining 100 million ratings given by about half-a-million users to thousands of: movie titles, and announced an open competition for the best collaborative ﬁl-: tering algorithm in this domain. Matrix Factorization [38] techniques rooted in: numerical linear algebra and statistical matrix analysis emerged as a state of the: art technique.: Currently, Recommender Systems remain an active area of research, with a: dedicated ACM conference, intersecting several sub-disciplines of statistics, ma-: chine learning, data mining and information retrievals. Applications have been: pursued in diverse domains ranging from recommending webpages to music, books,: movies and other consumer products.: 2: Items: 1: 2: ...: i: ...: m: Users: 1: 5: 3: 1: 2: 2: 2: 4: :: 5: u: 3: 4: 2: 1: :: 4: n: 3: 2: a: 3: 5: ?: 1: Figure 1: User ratings matrix, where each cell ru,i corresponds to the rating of: user u for item i. The task is to predict the missing rating ra,i for the active user a.: 3

Structure of Learning System: The most general setting in which recommender systems are studied is presented: in Figure 1. Known user preferences are represented as a matrix of n users and: m items, where each cell ru,i corresponds to the rating given to item i by the user: u. This user ratings matrix is typically sparse, as most users do not rate most: items. The recommendation task is to predict what rating a user would give to a: previously unrated item. Typically, ratings are predicted for all items that have not: been observed by a user, and the highest rated items are presented as recommen-: dations. The user under current consideration for recommendations is referred to: as the active user.: The myriad approaches to Recommender Systems can be broadly categorized as: • Collaborative Filtering (CF): In CF systems a user is recommended items: based on the past ratings of all users collectively.: • Content-based recommending: These approaches recommend items that are: similar in content to items the user has liked in the past, or matched to: attributes of the user.: • Hybrid approaches: These methods combine both collaborative and content-: based approaches.: 3

